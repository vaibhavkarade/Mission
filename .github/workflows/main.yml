name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  compile:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # - name: Set up JDK 17
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version: '17'

      - name: Compile
        run: mvn compile -DskipTests=true

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: compiled-artifacts
          path: target/
  scan:
    runs-on: self-hosted
    needs: compile
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          output-format: 'table'
          output: 'trivy-fs-report.html'

      - name: Upload Trivy report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: trivy-fs-report.html
  sonarqube:
   runs-on: self-hosted
   needs: compile
   steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=mission

   
      


      
  package:
    runs-on: self-hosted
    needs: sonarqube
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # - name: Set up JDK 17
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version: '17'

      - name: Package
        run: mvn package -DskipTests=true

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: packaged-artifacts
          path: target/
  # buildpush:
  #  runs-on: self-hosted
  #  needs: package
  #  steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Download packaged artifacts
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: packaged-artifacts
  #       path: target/

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3

  #   - name: Docker login
  #     run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login --username --password-stdin "${{ secrets.DOCKERHUB_USERNAME }}" 

  #   - name: Build and push Docker image
  #     run: |
  #       docker build -t vaibhavkarade/mission2:latest .
  #       docker push vaibhavkarade/mission2:latest

  #   - name: Deploy to container
  #     run: |
  #       docker run -d -p 8080:8080 --name mission vaibhavkarade/mission2:latest

  # buildpush:
  #  runs-on: self-hosted
  #  needs: package
  #  steps:
  #    - name: Docker login
  #      run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }} 
  #    # - name: Docker build and push
  #    #   run: |
  #    #      # Run commands to build and push Docker images
  #    #       docker build -t mission2.
  #    #       docker tag mission2 vaibhavkarade/mission2:latest
  #    #       docker login -u --password-stdin ${{ secrets.DOCKERHUB_USERNAME }} -p --password-stdin ${{ secrets.DOCKERHUB_PASSWORD }}
  #    #       docker push vaibhavkarade/mission2:latest    
  


